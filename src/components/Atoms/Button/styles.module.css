.base {
  background: var(--color-background);
  cursor: pointer;
  min-height: var(--button-height);
  min-width: var(--button-height);

  /* Prevent zoom on double-tap */
  touch-action: manipulation;

  &:focus {
    outline: none;
  }

  &:active {
    background: var(--color-background);
  }

  /* HACK: the "focus-visible" polyfill adds this data-* attribute. */
  &[data-focus-visible-added] {
    background: var(--color-accent-1);
    outline: var(--outline-focus);
    outline-offset: -1px;

    /* Force focus-visible elements to the top of the vertical stacking order.
    Mainly used to prevent outline from being obscured by adjacent buttons. */
    position: relative;
  }
}

@media (min-width: env(--breakpoint-phone)) {
  :root {
    --button-height: 36px;
  }

  .base {
    min-height: auto;
  }
}

@media (hover: hover) {
  .base:hover:not(:active) {
    background: var(--color-accent-1);
  }
}

.full-width {
  width: 100%;
}

.disabled {
  composes: semi-transparent from "../../../css/util.module.css";
  pointer-events: none;
  cursor: default;

  &:hover,
  &:focus {
    background: inherit;
  }
}

.padded {
  padding: var(--spacing-tiny);
}

.bordered {
  border: var(--border-solid);
}

.rounded {
  border-radius: var(--border-radius);
}

/* Variations */
.primary {
  composes: base bordered rounded padded;
}

.square {
  composes: base bordered padded;
}

.icon {
  composes: base rounded padded;

  /* stylelint-disable-next-line selector-max-type */
  & > svg {
    vertical-align: middle;
  }
}
